##E-R模型E（实体）R（关系）实体（Entity）：是指客观存在可以相互区别的事物。	实体可以是具体的对象，如：一个工厂职工，一辆汽车等；也可以是抽象的事件，如：一次借书，一场足球赛等。	实体型用矩形表示。	属性（Attribute）：实体有很多特性，每一个特性称为属性。	每个属性有一个域值，其类型可以是整数型、实数型、字符串型。比如，学生（实体）有学号、姓名、年龄、性别等属性，相应域值为字符、字符串、整数和字符串型。	属性用椭圆形表示。	联系（Relationship）：	1:1联系：如果实体集E1中的每个实体最多只能和实体集E2中的一个实体有联系，反之亦然，那么实体集E1对E2的联系称为“一对一联系”，计为“1:1”。联系用菱形表示。		1：N联系：如果实体集E1中的每个实体与实体集E2中任意个（零个或多个）实体有联系，而E2中每个实体至多和E1中的一个实体有联系，那么E1对E2的联系是“一对多联系”，记为“1：N”。		M：N联系：如果实体集E1中的每个实体与实体集E2中的任意个（零个或多个）实体有联系，反之亦然，那么E1对E2的联系是“多对多联系”，记为“M：N”	ER模型转换成关系模式的规则关系模式的概念 TODO关系模式的组成： 	1.关系--关系名，关系模式，关系实体	2.操作-CURD	3.完整性	##键（码）##函数依赖##范式	第一范式（1NF）	第二范式（2NF）	第三范式（3NF）##无损联接分解	将一个关系模式分解成若干个关系模式后，通过自然联接和投影等运算仍能还原到原来的关系模式，则这种分解为无损联接分解。	##关系代数及元组演算	关系代数的五种基本运算，并、差、笛卡儿积、投影和选择。此外还有除运算（略）		关系代数是一种抽象的查询语言，是一种代数的符号，其中的查询是通过向关系附加特定的操作符来表示，它包括一个对表进行操作的集合。		1.并（Union，U）计算两个表在集合理论上的联合。给出表R和S（两者有相同的元/列数），R U S 的联合救市所有在R里面有 或S 里面有 或在两个里面都有的记录集合。	2.差（Diference，-）计算两个表的区别的集合。令R和S是拥有相同元/列的表。R-S是在R里面却不在S里面的记录的集合。		3.笛卡儿积（PRODUCT，×）计算两个关系的笛卡儿积。令R为有K1元的表，令S为有K2元的表。R × S是所有K1 + K2元的集合，其前K1个元素来自R里的一条记录，而后K2个元素来自S里的一条记录。（对两个关系做组合）。		4.投影（Project，π）从一个关系里面抽取指明的属性（列）。令R为一个包含一个属性X的关系。π X(R) = {t(X)|t € R}，其中t(X)表示记录t里的属性X的值。		5，选择（Select，σ）从关系里面抽取出满足给定限制条件的记录。		6.交（Intersection，∩）计算两个表集合理论上的交集。给出表R和S，R ∩ S是同时在R和S里面的记录的集合。同时要求R和S拥有相同的元/列数。	复合操作	======================	联接（Join，▷◁）通过相同属性连接两个表。令R为一个有属性A,B,C的表，令S为一个有属性C,D,E的表。两个表有一个共同的属性C。		除（Division，÷）设有关系R(X,Y)与关系S(Z),其中X,Y,Z为属性集合。假设Y和Z具有相同的属性个数，且对应属性出自相同域。关系R(X,Y)÷S(Z)所得的商是关系R在属性X上投影的一个子集，该子集和S（Z）的笛卡儿积必须包含在R(X,Y)中，记为R÷S。##元组演算	在元组关系演算系统中，称	{t | Φ(t)}	为元组演算表达式。其中，t是元组变量，Φ(t)是元组关系演算公式，简称公式。它由原子公式和运算符组成		原子公式：		R(t)={t|R(t)}		略		用关系演算表达式来表示五种基本运算	##SQL语言	什么是SQL？--结构化查询语言	SQL的基本功能：		1.数据定义（DD）：方便的建立数据库和表的结构		2.数据管理（DM）：CURD		3.数据查询（DQ）:对数据库中的内容进行查询。			SQL的特点：		1.简单易用。		2.查询功能强大。		3.功能丰富。		4.高度非过程化的语言。用户只需要指出做什么而不是需要指明怎么做。			CREATE	CHECK	ALTER	DROP	CREATE VIEW	索引--重点	NULL只能用is语句不能用==	集函数：count，sum	GROUP,HAVING	子查询											