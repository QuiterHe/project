
##文法
1.终结符和非终结符
   终结符是原子量，不能在左边，一般用小写字母表示
   非终结符可以再拆分，一般用大写字母表示
2.文法的类型
   0型文法：设G= (Vn, Vt, P, S)，如果他的每个产生式α -> β是这样一种结构：α 属于 (Vn 并 Vt)*且至少含有 一个非终结符，而β 属于 (Vn 并 Vt)*，则G是一个0型文法。
   
   其中Vn是非终结符的集合，Vt是终结符的集合，P代表推导式集合，S代表开始符集合。
   0型文法也称短语文法。一个非常重要的理论结果是：0型文法的能力相当于图灵机(Turing)。或者说，任何0型文语言都是递归可枚举的，反之，递归可枚举集必定是一个0型语言。0型文法是这几类文法中限制最少的一个。
   
   1型文法
       1型文法也叫上下文有关文法，此文法对应于线性有界自动机。它是在0型文法的基础上对每一个α -> β，都有|β|>=|α|。这里的|β表示的是β的长度|。
	   注意：虽然要求|β|>=|α|。但是有一个特例：α-> e 也满足1型文法。
   2型文法
       2型文法也叫上下文无关文法，它对应于下推自动机。2型文法是在1型文法的基础上再满足：每一个α->β都有α是非终结符。
	   如Ab->Bab虽然符合1型文法要求，但不满足2型文法要求，因为其α=Ab,而Ab不是一个非终结符。
	   
   3型文法
       
3.如何判断一个串是否为某个文法的句型

α -> β

##正规式（正则表达式）
		文法产生式    正规式
规则1	A->xB,B->y		A=xy	
规则2	A->xA|y			A=x*y(递归)
规则3	A->x,A->y		A->x|y

##有限自动机（有穷自动机）
1.NFA与DFA的定义
	确定的有限自动机：
		一个确定的有限状态自动机M（记作DFAM）是一个五元组：M=(S,∑,f,S0,Z),
		其中：
			1.S是一个有限状态集合；
			2.∑是一个字母表，它的每个元素称为一个输入字符；
			3.f是一个从S*∑至S的单值部分映射。f(S,a)=S'意味着当前状态为S，输入字符为a时，将转换到下一个状态S'。我们称S'为S的一个后继状态；
			4.S0 属于 S，是唯一的初态；
			5.Z 包含于 S，是一个终态集；
			
		注意，初态只有一个，终态可以有多个；
		
	不确定的有限自动机：
		一个不确定的有限状态自动机M（记作NFAM）是一个五元组：M=(S,∑,f,S0,Z),
		其中：
			1.S是一个有限状态集合；
			2.∑是一个字母表，它的每个元素称为一个输入字符；
			3.f是一个从S*∑至S的单值部分映射。f(S,a)=S'意味着当前状态为S，输入字符为a时，将转换到下一个状态S'。我们称S'为S的一个后继状态；
			4.S0 包含于 S，是非空的初态集；
			5.Z 包含于 S，是一个终态集；
			
		注意，初态有多个，终态有多个；
2.NFA转化为DFA
	子集法
	
3.正规式与有限自动机的转化
	若 S1 --ab--> S2,则用 S1 --a--> S3 --b--> S2 代替；
	若 S1 --a|b--> S2,则用 S1 --a-->   S2 代替；
							  --b-->
	若 S1 --a*--> S2,则用 S1 --ε--> S3(自循环) --ε--> S2 代替；
	
	标识符的正则：(_|a)(_|a|d)*
	

